Introduction to Java

1) 
import java.util.Scanner;
class Student {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    System.out.print("Name: "); String name = sc.nextLine();
    System.out.print("Roll: "); int roll = sc.nextInt();
    int m1=sc.nextInt(), m2=sc.nextInt(), m3=sc.nextInt();
    int total = m1+m2+m3;
    double avg = total/3.0;
    System.out.println(name+" ("+roll+") Total="+total+" Avg="+avg);
  }
}

2)
import java.util.Scanner;

public class Calculator {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter first number: ");
        double a = sc.nextDouble();
        System.out.print("Enter second number: ");
        double b = sc.nextDouble();
        System.out.print("Enter operator (+, -, *, /): ");
        char op = sc.next().charAt(0);

        switch(op) {
            case '+': System.out.println("Result: " + (a + b)); break;
            case '-': System.out.println("Result: " + (a - b)); break;
            case '*': System.out.println("Result: " + (a * b)); break;
            case '/': System.out.println("Result: " + (a / b)); break;
            default: System.out.println("Invalid operator");
        }
    }
}

3)
import java.util.Scanner;
class Q3 {
  public static void main(String[] args) {
    Scanner sc=new Scanner(System.in);
    int n=sc.nextInt();
    if(n%2==0) System.out.println("Even");
    else System.out.println("Odd");
  }
}

Classes and Objects

4)
import java.util.Scanner;
class Student {
    String name;
    int id;
    double marks;

    void inputDetails() {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter Student Name: ");
        name = sc.nextLine();
        System.out.print("Enter Student ID: ");
        id = sc.nextInt();
        System.out.print("Enter Marks: ");
        marks = sc.nextDouble();
    }

    void displayDetails() {
        System.out.println("\n--- Student Details ---");
        System.out.println("Name: " + name);
        System.out.println("ID: " + id);
        System.out.println("Marks: " + marks);
    }
}
public class StudentDemo {
    public static void main(String[] args) {
        Student s1 = new Student();   
        s1.inputDetails();            
        s1.displayDetails();          
    }
}

5)
class Rectangle {
  int l,b;
  Rectangle(int x,int y){ l=x; b=y; }
  int area(){ return l*b; }
  int peri(){ return 2*(l+b); }
  public static void main(String[] a){
    Rectangle r=new Rectangle(4,6);
    System.out.println("Area="+r.area()+" Perimeter="+r.peri());
  }
}

6)
class Temp {
  double toF(double c){ return (c*9/5)+32; }
  double toC(double f){ return (f-32)*5/9; }
  public static void main(String[] a){
    Temp t=new Temp();
    System.out.println("25C="+t.toF(25));
    System.out.println("77F="+t.toC(77));
  }
}

Inheritance

7)
class Person {
  String name; int age;
}

class Teacher extends Person {
  String subject; double salary;
}

class Test1 {
  public static void main(String[] args){
    Teacher t=new Teacher();
    t.name="Rahul"; t.age=30;
    t.subject="Math"; t.salary=40000;
    System.out.println(t.name+" "+t.age+" "+t.subject+" "+t.salary);
  }
}

8)
class Person {
  Person(){ System.out.println("Person constructor"); }
}

class Employee extends Person {
  Employee(){ System.out.println("Employee constructor"); }
}

class Manager extends Employee {
  Manager(){ System.out.println("Manager constructor"); }
  public static void main(String[] args){
    Manager m=new Manager();
  }
}

9)
class Animal {
  void sound(){ System.out.println("Animal sound"); }
}

class Dog extends Animal {
  void sound(){ System.out.println("Bark"); }
}

class Cat extends Animal {
  void sound(){ System.out.println("Meow"); }
}

class Cow extends Animal {
  void sound(){ System.out.println("Moo"); }
}

class AnimalSound {
  public static void main(String[] args){
    new Dog().sound();
    new Cat().sound();
    new Cow().sound();
  }
}

Polymorphism
10)
class Calculator {
    int multiply(int a, int b) {
        return a * b;
    }

    double multiply(double a, double b) {
        return a * b;
    }

    public static void main(String[] args) {
        Calculator c = new Calculator();
        System.out.println("Multiply int: " + c.multiply(5, 10));
        System.out.println("Multiply double: " + c.multiply(2.5, 3.5));
    }
}

11)
class Shape {
    void area() {
        System.out.println("Area not defined");
    }
}

class Circle extends Shape {
    void area() {
        System.out.println("Area of Circle");
    }
}

class Triangle extends Shape {
    void area() {
        System.out.println("Area of Triangle");
    }
}

class Rectangle extends Shape {
    void area() {
        System.out.println("Area of Rectangle");
    }
}

public class TestShape {
    public static void main(String[] args) {
        Shape s;

        s = new Circle();
        s.area();

        s = new Triangle();
        s.area();

        s = new Rectangle();
        s.area();
    }
}

12)
class Animal {}
class Dog extends Animal {}
class Cat extends Animal {}

public class InstanceDemo {
    public static void main(String[] args) {
        Animal a1 = new Dog();
        Animal a2 = new Cat();

        System.out.println(a1 instanceof Dog);    // true
        System.out.println(a1 instanceof Cat);    // false
        System.out.println(a2 instanceof Cat);    // true
        System.out.println(a2 instanceof Animal); // true
    }
}

Abstraction and Encapsulation
13)
class BankAccount {
    private int accNo;
    private double balance;

    public int getAccNo() { return accNo; }
    public void setAccNo(int accNo) { this.accNo = accNo; }

    public double getBalance() { return balance; }
    public void setBalance(double balance) { this.balance = balance; }
}

public class TestBank {
    public static void main(String[] args) {
        BankAccount b = new BankAccount();
        b.setAccNo(101);
        b.setBalance(5000);
        System.out.println("AccNo: " + b.getAccNo() + " Balance: " + b.getBalance());
    }
}

14)
interface Drawable {
    void draw();
}

class Circle implements Drawable {
    public void draw() { System.out.println("Drawing Circle"); }
}

class Square implements Drawable {
    public void draw() { System.out.println("Drawing Square"); }
}

public class TestDraw {
    public static void main(String[] args) {
        Drawable d = new Circle(); d.draw();
        d = new Square(); d.draw();
    }
}

Packages and Access Control

15)
package mathops;

public class Operations {
    public int add(int a, int b) {
        return a + b;
    }

    public int subtract(int a, int b) {
        return a - b;
    }
}
import mathops.Operations;

public class MainTest {
    public static void main(String[] args) {
        Operations op = new Operations();
        System.out.println("Add: " + op.add(5, 3));
        System.out.println("Subtract: " + op.subtract(5, 3));
    }
}

16)

class Example {
    private int a = 10;
    public int b = 20;
    protected int c = 30;
    int d = 40;   // default access

    private void showA() {
        System.out.println("Private a = " + a);
    }

    public void showB() {
        System.out.println("Public b = " + b);
    }

    protected void showC() {
        System.out.println("Protected c = " + c);
    }

    void showD() {
        System.out.println("Default d = " + d);
    }
}

class TestAccess {
    public static void main(String[] args) {
        Example e = new Example();
        // e.showA();   
        e.showB();
        e.showC();
        e.showD();
    }
}

17)
package package1;

public class A {
    public void show() {
        System.out.println("Hello from A");
    }
}
package package2;
import package1.A;

public class B {
    public static void main(String[] args) {
        A obj = new A();
        obj.show();
    }
}

Exception Handling
18)
import java.util.Scanner;

class Divide {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter two numbers: ");
        int a = sc.nextInt();
        int b = sc.nextInt();

        try {
            int result = a / b;
            System.out.println("Result = " + result);
        } catch (ArithmeticException e) {
            System.out.println("Error: Cannot divide by zero");
        }
    }
}

19)
class ArrayDemo {
    public static void main(String[] args) {
        int arr[] = {10, 20, 30};

        try {
            System.out.println(arr[5]); // invalid index
        } catch (ArrayIndexOutOfBoundsException e) {
            System.out.println("Error: Invalid array index");
        }
    }
}

20)

import java.util.Scanner;

class AgeException extends Exception {
    AgeException(String msg) { super(msg); }
}

class TestAge {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter age: ");
        int age = sc.nextInt();

        try {
            if (age < 18) 
                throw new AgeException("Age must be 18 or above");
            else 
                System.out.println("Valid age: " + age);
        } catch (AgeException e) {
            System.out.println("Error: " + e.getMessage());
        }
    }
}








